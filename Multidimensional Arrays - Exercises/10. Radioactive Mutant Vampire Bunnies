import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;

public class _10_Radioactive_Mutant_Vampire_Bunnies
{
    public static void main(String[] args)
    {
        Scanner scanner = new Scanner(System.in);
        String[] sizes = scanner.nextLine().split(" ");
        int rows = Integer.parseInt(sizes[0]);
        int cols = Integer.parseInt(sizes[1]);
        String[][] matrix = new String[rows][cols];
        int playerRow = 0;
        int playerCol = 0;
        boolean isFound = false;
        boolean isPlayerWon = false;
        for(int row = 0; row < rows; row++)
        {
            String[] arr = scanner.nextLine().split("");
            matrix[row] = arr;
            if(!isFound)
            {
                for(int i = 0; i < arr.length; i++)
                {
                    if(arr[i].equals("P"))
                    {
                        playerRow = row;
                        playerCol = i;
                        arr[i] = ".";
                        isFound = true;
                        break;
                    }
                }
            }
        }

        int count = 0;
        String commands = scanner.nextLine();
        for(int i = 0; i < commands.length(); i++)
        {
            char ch = commands.charAt(i);
            String command = String.valueOf(ch);
            if(command.equals("R"))
            {
                if(playerCol == cols - 1)
                {
                    isPlayerWon = true;

                }
                else
                {
                    playerCol++;
                }
            }
            else if(command.equals("L"))
            {
                if(playerCol == 0)
                {
                    isPlayerWon = true;

                }
                else
                {
                    playerCol--;
                }
            }
            else if(command.equals("U"))
            {
                if(playerRow == 0)
                {
                    isPlayerWon = true;

                }
                else
                {
                    playerRow--;
                }
            }
            else if(command.equals("D"))
            {
                if(playerRow == rows - 1)
                {
                    isPlayerWon = true;

                }
                else
                {
                    playerRow++;
                }
            }
            matrix = findBunnies(matrix);
            if(isPlayerWon)
            {
                printPlayerWon(matrix, playerRow, playerCol);
                return;
            }
            if(checkIfPlayerIsDeath(matrix, playerRow, playerCol))
            {
                printPlayerDead(matrix, playerRow, playerCol);
                return;
            }

        }

    }
    public static void printPlayerWon( String[][] matrix, int playerRow, int playerCol)
    {
        for(int row = 0; row < matrix.length; row++)
        {
            for(int col = 0; col < matrix[row].length; col++)
            {

                System.out.print(matrix[row][col]);
            }
            System.out.println();
        }
        System.out.printf("won: %d %d%n", playerRow, playerCol);
    }
    public static String[][] findBunnies(String[][] matrix)
    {
        List<Integer> bunniesRowCol = new ArrayList<>();
        for(int row = 0; row < matrix.length; row++)
        {
            for(int col = 0; col < matrix[row].length; col++)
            {
                if (matrix[row][col].equals("B"))
                {
                    bunniesRowCol.add(row);
                    bunniesRowCol.add(col);
                }
            }
        }
        if(bunniesRowCol.size() == 0)
        {
            return matrix;
        }
        //R", "L", "U", "D

        for(int row = 0; row < matrix.length; row++)
        {
            for(int col = 0; col < matrix[row].length; col++)
            {
                if(row == bunniesRowCol.get(0) && col == bunniesRowCol.get(1))
                {
                    if(col < matrix[row].length - 1)
                    {
                        matrix[row][col + 1] = "B";
                    }
                    if(col > 0)
                    {
                        matrix[row][col - 1] = "B";
                    }
                    if(row > 0)
                    {
                        matrix[row - 1][col] = "B";
                    }
                    if(row < matrix.length - 1)
                    {
                        matrix[row + 1][col] = "B";
                    }
                    bunniesRowCol.remove(0);
                    bunniesRowCol.remove(0);
                    if(bunniesRowCol.size() == 0)
                    {
                        return matrix;
                    }
                }

            }
        }
        return matrix;
    }
    public static boolean checkIfPlayerIsDeath(String[][] matrix, int playerRow, int playerCol)
    {
        for(int row = 0; row < matrix.length; row++)
        {
            for(int col = 0; col < matrix[row].length; col++)
            {
                if(row == playerRow && col == playerCol)
                {
                    if(matrix[row][col].equals("B"))
                    {
                        return true;
                    }
                }
            }
        }
        return false;
    }
    public static void printPlayerDead(String[][] matrix, int playerRow, int playerCol)
    {
        for(int row = 0; row < matrix.length; row++)
        {
            for(int col = 0; col < matrix[row].length; col++)
            {

                System.out.print(matrix[row][col]);
            }
            System.out.println();
        }
        System.out.printf("dead: %d %d%n", playerRow, playerCol);
    }

}
