import java.util.LinkedHashMap;
import java.util.Scanner;
import java.util.TreeMap;

public class _08_User_Logs
{
    public static void main(String[] args)
    {
        Scanner scanner = new Scanner(System.in);
        TreeMap<String, LinkedHashMap<String, Integer>> users_Ip_CountIp = new TreeMap<>();
        String command = scanner.nextLine();
        while(!command.equals("end"))
        {
            String[] items = command.split(" ");
            users_Ip_CountIp = addNewUserOrUpdateLis(users_Ip_CountIp, items);
            command = scanner.nextLine();
        }
        printFinalState(users_Ip_CountIp);
    }
    public static TreeMap<String, LinkedHashMap<String, Integer>> addNewUserOrUpdateLis(TreeMap<String, LinkedHashMap<String, Integer>> users_Ip_CountIp,
                                                                                        String[] items )
    {
        String first = items[0];
        String second = items[2];
        String iP = first.substring(3);
        String user = second.substring(5);
        if(!users_Ip_CountIp.containsKey(user))
        {
            users_Ip_CountIp.put(user, new LinkedHashMap<>());
            LinkedHashMap<String, Integer> iP_CountIp = new LinkedHashMap<>();
            iP_CountIp.put(iP, 1);
            users_Ip_CountIp.put(user, iP_CountIp);
        }
        else
        {
            LinkedHashMap<String, Integer> iP_CountIp = users_Ip_CountIp.get(user);
            if(!iP_CountIp.containsKey(iP))
            {
                iP_CountIp.put(iP, 1);
            }
            else
            {
                iP_CountIp.put(iP, iP_CountIp.get(iP) + 1);
            }


        }
        return users_Ip_CountIp;
    }
    public static void printFinalState(TreeMap<String, LinkedHashMap<String, Integer>> users_Ip_CountIp)
    {
        for(String key : users_Ip_CountIp.keySet())
        {
            System.out.println(key + ":");
            int counter  = 0;
            for(String key1 : users_Ip_CountIp.get(key).keySet())
            {
                if(counter < users_Ip_CountIp.get(key).size() - 1)
                {
                    System.out.print(key1 + " => " + users_Ip_CountIp.get(key).get(key1) + ", ");
                }
                else
                {
                    System.out.print(key1 + " => " + users_Ip_CountIp.get(key).get(key1) + ".");
                }
                counter++;
            }
            System.out.println();
        }
    }
}
