import java.util.*;
import java.util.stream.Collectors;

public class _13_Dragon_Army
{
    public static void main(String[] args)
    {
        Scanner scanner = new Scanner(System.in);
        List<DragonArmy> dragonsArmyList = new ArrayList<>();
        LinkedHashSet<String> uniqueDragonTypes = new LinkedHashSet<>();

        int n = Integer.parseInt(scanner.nextLine());
        for (int i = 0; i < n; i++)
        {
            String[] items = scanner.nextLine().split(" ");
            String[] checkedItems = checkIfInputIsValid(items);
            uniqueDragonTypes = addUniqueDragonType(uniqueDragonTypes, checkedItems);
            dragonsArmyList = createAndAddOrUpdeteDragon(dragonsArmyList, checkedItems);
        }
        dragonsArmyList.sort(Comparator.comparing(DragonArmy::getName));
        printFinalState(dragonsArmyList, uniqueDragonTypes);
    }
    public static LinkedHashSet<String> addUniqueDragonType(  LinkedHashSet<String> uniqueDragonTypes, String[] checkedItems )
    {
        String type = checkedItems[0];
        uniqueDragonTypes.add(type);
        return uniqueDragonTypes;
    }

    public static String[] checkIfInputIsValid(String[] items)
    {
        //health - 250, damage - 45, and armor - 10
        //{type} {name} {damage} {health} {armor}
        if (items[2].equals("null"))
        {
            items[2] = "45";
        }
        if (items[3].equals("null"))
        {
            items[3] = "250";
        }
        if (items[4].equals("null"))
        {
            items[4] = "10";
        }
        return items;
    }
    public static  List<DragonArmy> createAndAddOrUpdeteDragon(List<DragonArmy> dragonsArmyList,  String[] checkedItems)
    {
        String type = checkedItems[0];
        String name = checkedItems[1];
        int damage = Integer.parseInt(checkedItems[2]);
        int health = Integer.parseInt(checkedItems[3]);
        int armor = Integer.parseInt(checkedItems[4]);
        if(dragonsArmyList.size() == 0)
        {
            DragonArmy dragonArmy = new DragonArmy(type, name, damage, health, armor);
            dragonsArmyList.add(dragonArmy);
        }
        else
        {

            for(int i = 0; i < dragonsArmyList.size(); i++)
            {
                if(dragonsArmyList.get(i).getType().equals(type) &&
                        dragonsArmyList.get(i).getName().equals(name))
                {
                    dragonsArmyList.remove(i);
                }
            }
            DragonArmy dragonArmy = new DragonArmy(type, name, damage, health, armor);
            dragonsArmyList.add(dragonArmy);
        }
        return dragonsArmyList;
    }
    public static void printFinalState(List<DragonArmy> dragonsArmyList,  LinkedHashSet<String> uniqueDragonTypes)
    {
        for(String drType : uniqueDragonTypes)
        {
            List<Double> averageDamage = new ArrayList<>();
            List<Double> averageHealth = new ArrayList<>();
            List<Double> averageArmor = new ArrayList<>();
            for(DragonArmy da : dragonsArmyList)
            {
                if(da.getType().equals(drType))
                {
                    averageDamage.add(da.getDamage());
                    averageHealth.add(da.getHealth());
                    averageArmor.add(da.getArmor());
                }
            }
            double avDamage = averageDamage.stream()
                    .mapToDouble(Double::doubleValue)
                    .average()
                    .getAsDouble();
            double averHealth = averageHealth.stream()
                    .mapToDouble(Double::doubleValue)
                    .average()
                    .getAsDouble();

            double avArmor = averageArmor.stream()
                    .mapToDouble(Double::doubleValue)
                    .average()
                    .getAsDouble();
            System.out.printf("%s::(%.2f/%.2f/%.2f)%n", drType, avDamage, averHealth, avArmor);
            for(DragonArmy da : dragonsArmyList)
            {
                if(da.getType().equals(drType))
                {
                    System.out.printf("-%s -> damage: %.0f, health: %.0f, armor: %.0f%n",
                            da.getName(), da.getDamage(), da.getHealth(), da.getArmor());
                }
            }
        }
    }
}
class DragonArmy
{
    //{type} {name} {damage} {health} {armor}
    private String type;
    private String name;
    private int damage;
    private int health;
    private int armor;

    DragonArmy(String type, String name, int damage, int health, int armor) {
        this.type = type;
        this.name = name;
        this.damage = damage;
        this.health = health;
        this.armor = armor;
    }

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public double getDamage() {
        return damage;
    }

    public void setDamage(int damage) {
        this.damage = damage;
    }

    public double getHealth() {
        return health;
    }

    public void setHealth(int health) {
        this.health = health;
    }

    public double getArmor() {
        return armor;
    }

    public void setArmor(int armor) {
        this.armor = armor;
    }
}
